<UserControl x:Class="DeviceSimulationTool.Components.Loading"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeviceSimulationTool.Components"
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="800">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="CanvasBase" 
                   TargetType="{x:Type Canvas}">
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Canvas1" 
                   TargetType="{x:Type Canvas}"
                   BasedOn="{StaticResource CanvasBase}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="2">
                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                    <LinearDoubleKeyFrame KeyTime="0:0:3.000" Value="360"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Canvas2" 
                   TargetType="{x:Type Canvas}"
                   BasedOn="{StaticResource CanvasBase}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="2">
                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                    <LinearDoubleKeyFrame KeyTime="0:0:2.000" Value="-360"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LoadingIndicatorArcsStyle" 
                   TargetType="{x:Type Grid}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Viewbox Stretch="Uniform">
        <Grid Style="{StaticResource LoadingIndicatorArcsStyle}">
            <Canvas Opacity="1.0"
                Style="{StaticResource Canvas1}">
                <Path Stroke="#ccc" StrokeThickness="5">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Transform>
                                <TranslateTransform X="25" Y="3"/>
                            </PathGeometry.Transform>

                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="0,0">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment Size="22,22" IsLargeArc="True" SweepDirection="CounterClockwise" Point="22,22" />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>

            <Canvas Opacity="0.6"
                Style="{StaticResource Canvas2}">
                <Path Stroke="#ccc" StrokeThickness="5">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Transform>
                                <TranslateTransform X="8" Y="25"/>
                            </PathGeometry.Transform>

                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="0,0">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment Size="17,17" IsLargeArc="True" SweepDirection="Clockwise" Point="17,17"/>
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>
        </Grid>
    </Viewbox>
</UserControl>
